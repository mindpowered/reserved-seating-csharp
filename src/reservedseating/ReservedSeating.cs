// Generated by Haxe 4.1.1

#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating : global::haxe.lang.HxObject {
		
		static ReservedSeating() {
			unchecked{
				#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::haxe.lang.FieldLookup.addFields(new int[]{957002115}, new string[]{"registerMyMethods"});
			}
		}
		#line default
		
		public ReservedSeating(global::haxe.lang.EmptyObject empty) {
		}
		
		
		public ReservedSeating(global::maglev.MagLev maglev) {
			#line 11 "/my-component/src/reservedseating/ReservedSeating.hx"
			global::reservedseating.ReservedSeating.__hx_ctor_reservedseating_ReservedSeating(this, maglev);
		}
		#line default
		
		protected static void __hx_ctor_reservedseating_ReservedSeating(global::reservedseating.ReservedSeating __hx_this, global::maglev.MagLev maglev) {
			#line 12 "/my-component/src/reservedseating/ReservedSeating.hx"
			__hx_this.maglev = maglev;
			__hx_this.registerMyMethods();
		}
		#line default
		
		public global::maglev.MagLev maglev;
		
		public virtual void registerMyMethods() {
			#line 17 "/my-component/src/reservedseating/ReservedSeating.hx"
			global::maglev.MagLev bus = this.maglev;
			#line 19 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CreateVenue", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_19__Fun(bus)));
			#line 30 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CreateVenueConfiguration", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_30__Fun(bus)));
			#line 41 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CreateSeat", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_41__Fun(bus)));
			#line 52 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CreateEvent", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_52__Fun(bus)));
			#line 63 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CreateTable", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_63__Fun(bus)));
			#line 74 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CreateOrder", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_74__Fun(bus)));
			#line 85 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetVenue", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_85__Fun(bus)));
			#line 96 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetVenueConfiguration", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_96__Fun(bus)));
			#line 107 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetSeat", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_107__Fun(bus)));
			#line 118 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetEvent", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_118__Fun(bus)));
			#line 129 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetTable", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_129__Fun(bus)));
			#line 140 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.UpdateVenue", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_140__Fun(bus)));
			#line 151 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.UpdateVenueConfiguration", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_151__Fun(bus)));
			#line 162 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.UpdateSeat", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_162__Fun(bus)));
			#line 173 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.UpdateEvent", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_173__Fun(bus)));
			#line 184 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.UpdateTable", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_184__Fun(bus)));
			#line 195 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.DeleteVenue", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_195__Fun(bus)));
			#line 206 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.DeleteVenueConfiguration", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_206__Fun(bus)));
			#line 217 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.DeleteSeat", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_217__Fun(bus)));
			#line 228 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.DeleteEvent", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_228__Fun(bus)));
			#line 239 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.DeleteTable", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_239__Fun(bus)));
			#line 250 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.DeleteOrder", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_250__Fun(bus)));
			#line 261 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CompleteOrder", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_261__Fun(bus)));
			#line 272 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.AddSeatToOrder", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_272__Fun(bus)));
			#line 283 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.ContinueOrder", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_283__Fun(bus)));
			#line 294 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.AutoSelect", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_294__Fun(bus)));
			#line 305 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CancelEvent", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_305__Fun(bus)));
			#line 316 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.CancelReservation", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_316__Fun(bus)));
			#line 327 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetSeatsAndTablesForEvent", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_327__Fun(bus)));
			#line 338 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.FindAbandonedOrders", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_338__Fun(bus)));
			#line 349 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetOrdersForUser", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_349__Fun(bus)));
			#line 360 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetAllEventsOnSale", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_360__Fun(bus)));
			#line 371 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.UpdateVenueConfigurationAvailability", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_371__Fun(bus)));
			#line 382 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetVenueConfigurations", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_382__Fun(bus)));
			#line 393 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetOrderSummary", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_393__Fun(bus)));
			#line 404 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.maglev.register("ReservedSeating.GetAllVenuesByOwner", global::maglev.MagLevFunction.fromFunction(new global::reservedseating.ReservedSeating_registerMyMethods_404__Fun(bus)));
		}
		#line default
		
		public override object __hx_setField(string field, int hash, object @value, bool handleProperties) {
			unchecked {
				#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
				switch (hash) {
					case 858513194:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						this.maglev = ((global::maglev.MagLev) (@value) );
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						return @value;
					}
					
					
					default:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						return base.__hx_setField(field, hash, @value, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_getField(string field, int hash, bool throwErrors, bool isCheck, bool handleProperties) {
			unchecked {
				#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
				switch (hash) {
					case 957002115:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						return ((global::haxe.lang.Function) (new global::haxe.lang.Closure(this, "registerMyMethods", 957002115)) );
					}
					
					
					case 858513194:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						return this.maglev;
					}
					
					
					default:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						return base.__hx_getField(field, hash, throwErrors, isCheck, handleProperties);
					}
					
				}
				
			}
			#line default
		}
		
		
		public override object __hx_invokeField(string field, int hash, object[] dynargs) {
			unchecked {
				#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
				switch (hash) {
					case 957002115:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						this.registerMyMethods();
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						break;
					}
					
					
					default:
					{
						#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
						return base.__hx_invokeField(field, hash, dynargs);
					}
					
				}
				
				#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
				return null;
			}
			#line default
		}
		
		
		public override void __hx_getFields(global::Array<string> baseArr) {
			#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
			baseArr.push("maglev");
			#line 8 "/my-component/src/reservedseating/ReservedSeating.hx"
			base.__hx_getFields(baseArr);
		}
		#line default
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_19__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_19__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 19 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 19 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 21 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CreateVenue"));
				#line 23 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 25 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CreateVenue\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 27 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_30__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_30__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 30 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 30 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 32 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CreateVenueConfiguration"));
				#line 34 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 36 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CreateVenueConfiguration\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 38 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_41__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_41__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 41 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 41 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 43 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CreateSeat"));
				#line 45 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 47 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CreateSeat\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 49 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_52__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_52__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 52 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 52 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 54 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CreateEvent"));
				#line 56 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 58 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CreateEvent\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 60 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_63__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_63__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 63 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 63 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 65 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CreateTable"));
				#line 67 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 69 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CreateTable\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 71 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_74__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_74__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 74 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 74 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 76 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CreateOrder"));
				#line 78 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 80 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CreateOrder\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 82 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_85__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_85__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 85 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 85 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 87 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetVenue"));
				#line 89 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 91 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetVenue\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 93 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_96__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_96__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 96 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 96 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 98 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetVenueConfiguration"));
				#line 100 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 102 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetVenueConfiguration\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 104 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_107__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_107__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 107 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 107 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 109 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetSeat"));
				#line 111 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 113 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetSeat\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 115 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_118__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_118__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 118 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 118 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 120 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetEvent"));
				#line 122 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 124 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetEvent\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 126 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_129__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_129__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 129 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 129 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 131 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetTable"));
				#line 133 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 135 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetTable\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 137 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_140__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_140__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 140 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 140 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 142 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.UpdateVenue"));
				#line 144 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 146 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.UpdateVenue\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 148 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_151__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_151__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 151 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 151 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 153 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.UpdateVenueConfiguration"));
				#line 155 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 157 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.UpdateVenueConfiguration\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 159 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_162__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_162__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 162 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 162 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 164 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.UpdateSeat"));
				#line 166 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 168 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.UpdateSeat\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 170 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_173__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_173__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 173 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 173 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 175 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.UpdateEvent"));
				#line 177 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 179 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.UpdateEvent\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 181 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_184__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_184__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 184 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 184 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 186 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.UpdateTable"));
				#line 188 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 190 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.UpdateTable\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 192 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_195__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_195__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 195 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 195 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 197 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.DeleteVenue"));
				#line 199 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 201 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.DeleteVenue\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 203 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_206__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_206__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 206 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 206 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 208 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.DeleteVenueConfiguration"));
				#line 210 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 212 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.DeleteVenueConfiguration\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 214 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_217__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_217__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 217 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 217 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 219 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.DeleteSeat"));
				#line 221 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 223 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.DeleteSeat\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 225 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_228__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_228__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 228 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 228 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 230 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.DeleteEvent"));
				#line 232 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 234 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.DeleteEvent\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 236 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_239__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_239__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 239 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 239 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 241 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.DeleteTable"));
				#line 243 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 245 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.DeleteTable\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 247 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_250__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_250__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 250 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 250 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 252 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.DeleteOrder"));
				#line 254 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 256 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.DeleteOrder\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 258 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_261__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_261__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 261 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 261 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 263 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CompleteOrder"));
				#line 265 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 267 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CompleteOrder\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 269 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_272__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_272__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 272 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 272 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 274 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.AddSeatToOrder"));
				#line 276 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 278 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.AddSeatToOrder\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 280 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_283__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_283__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 283 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 283 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 285 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.ContinueOrder"));
				#line 287 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 289 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.ContinueOrder\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 291 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_294__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_294__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 294 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 294 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 296 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.AutoSelect"));
				#line 298 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 300 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.AutoSelect\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 302 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_305__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_305__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 305 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 305 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 307 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CancelEvent"));
				#line 309 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 311 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CancelEvent\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 313 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_316__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_316__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 316 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 316 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 318 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.CancelReservation"));
				#line 320 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 322 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.CancelReservation\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 324 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_327__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_327__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 327 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 327 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 329 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetSeatsAndTablesForEvent"));
				#line 331 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 333 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetSeatsAndTablesForEvent\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 335 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_338__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_338__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 338 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 338 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 340 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.FindAbandonedOrders"));
				#line 342 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 344 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.FindAbandonedOrders\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 346 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_349__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_349__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 349 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 349 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 351 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetOrdersForUser"));
				#line 353 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 355 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetOrdersForUser\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 357 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_360__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_360__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 360 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 360 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 362 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetAllEventsOnSale"));
				#line 364 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 366 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetAllEventsOnSale\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 368 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_371__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_371__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 371 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 371 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 373 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.UpdateVenueConfigurationAvailability"));
				#line 375 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 377 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.UpdateVenueConfigurationAvailability\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 379 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_382__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_382__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 382 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 382 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 384 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetVenueConfigurations"));
				#line 386 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 388 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetVenueConfigurations\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 390 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_393__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_393__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 393 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 393 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 395 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetOrderSummary"));
				#line 397 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 399 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetOrderSummary\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 401 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}



#pragma warning disable 109, 114, 219, 429, 168, 162
namespace reservedseating {
	public class ReservedSeating_registerMyMethods_404__Fun : global::haxe.lang.Function {
		
		public ReservedSeating_registerMyMethods_404__Fun(global::maglev.MagLev bus) : base(1, 0) {
			#line 404 "/my-component/src/reservedseating/ReservedSeating.hx"
			this.bus = bus;
		}
		#line default
		
		public override object __hx_invoke1_o(double __fn_float1, object __fn_dyn1) {
			unchecked {
				#line 404 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevArray args = ( (( __fn_dyn1 == global::haxe.lang.Runtime.undefined )) ? (((global::maglev.MagLevArray) (((object) (__fn_float1) )) )) : (((global::maglev.MagLevArray) (__fn_dyn1) )) );
				global::maglev.MagLevArray data = global::maglev.MagLevArray.create();
				#line 406 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("_not_implemented_"));
				data.push(global::maglev.MagLevString.fromString("ReservedSeating.GetAllVenuesByOwner"));
				#line 408 "/my-component/src/reservedseating/ReservedSeating.hx"
				data.push(global::maglev.MagLevString.fromString("reservedseating"));
				this.bus.call("MindPowered.Telemetry.Send", data);
				#line 410 "/my-component/src/reservedseating/ReservedSeating.hx"
				global::maglev.MagLevError err = global::maglev.MagLevError.create(-20000, "You are trying to use the \'ReservedSeating.GetAllVenuesByOwner\' method but it\'s not quite done yet. Please email support@mindpowered.dev to find out when it will be done.", data);
				global::maglev.MagLevResult result = global::maglev.MagLevResult.fromError(err);
				#line 412 "/my-component/src/reservedseating/ReservedSeating.hx"
				return result;
			}
			#line default
		}
		
		
		public global::maglev.MagLev bus;
		
	}
}


